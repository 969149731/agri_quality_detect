<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.out.mapper.outDxDetectRecordsMapper">
    
    <resultMap type="outDxDetectRecords" id="outDxDetectRecordsResult">
        <result property="recordDxId"    column="record_dx_id"    />
        <result property="detectLocation"    column="detect_location"    />
        <result property="samplingDate"    column="sampling_date"    />
        <result property="samplingYear"    column="sampling_year"    />
        <result property="samplingMonth"    column="sampling_month"    />
        <result property="samplingCount"    column="sampling_count"    />
        <result property="qualifiedCount"    column="qualified_count"    />
        <result property="passRate"    column="pass_rate"    />
        <result property="createdDate"    column="created_date"    />
    </resultMap>

    <sql id="selectoutDxDetectRecordsVo">
        select record_dx_id, detect_location, sampling_date, sampling_year, sampling_month, sampling_count, qualified_count, pass_rate, created_date from out_dx_detect_records
    </sql>

    <select id="selectoutDxDetectRecordsList" parameterType="outDxDetectRecords" resultMap="outDxDetectRecordsResult">
        <include refid="selectoutDxDetectRecordsVo"/>
        <where>  
            <if test="detectLocation != null  and detectLocation != ''"> and detect_location = #{detectLocation}</if>
            <if test="samplingDate != null "> and sampling_date = #{samplingDate}</if>
            <if test="samplingYear != null "> and sampling_year = #{samplingYear}</if>
            <if test="samplingMonth != null "> and sampling_month = #{samplingMonth}</if>
            <if test="samplingCount != null "> and sampling_count = #{samplingCount}</if>
            <if test="qualifiedCount != null "> and qualified_count = #{qualifiedCount}</if>
            <if test="passRate != null "> and pass_rate = #{passRate}</if>
            <if test="createdDate != null "> and created_date = #{createdDate}</if>

            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND date_format(sampling_date,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND date_format(sampling_date,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
        </where>
    </select>
    
    <select id="selectoutDxDetectRecordsByRecordDxId" parameterType="Long" resultMap="outDxDetectRecordsResult">
        <include refid="selectoutDxDetectRecordsVo"/>
        where record_dx_id = #{recordDxId}
    </select>
        
    <insert id="insertoutDxDetectRecords" parameterType="outDxDetectRecords" useGeneratedKeys="true" keyProperty="recordDxId">
        insert into out_dx_detect_records
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="detectLocation != null">detect_location,</if>
            <if test="samplingDate != null">sampling_date,</if>
            <if test="samplingYear != null">sampling_year,</if>
            <if test="samplingMonth != null">sampling_month,</if>
            <if test="samplingCount != null">sampling_count,</if>
            <if test="qualifiedCount != null">qualified_count,</if>
            <if test="passRate != null">pass_rate,</if>
            <if test="createdDate != null">created_date,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="detectLocation != null">#{detectLocation},</if>
            <if test="samplingDate != null">#{samplingDate},</if>
            <if test="samplingYear != null">#{samplingYear},</if>
            <if test="samplingMonth != null">#{samplingMonth},</if>
            <if test="samplingCount != null">#{samplingCount},</if>
            <if test="qualifiedCount != null">#{qualifiedCount},</if>
            <if test="passRate != null">#{passRate},</if>
            <if test="createdDate != null">#{createdDate},</if>
         </trim>
    </insert>

    <update id="updateoutDxDetectRecords" parameterType="outDxDetectRecords">
        update out_dx_detect_records
        <trim prefix="SET" suffixOverrides=",">
            <if test="detectLocation != null">detect_location = #{detectLocation},</if>
            <if test="samplingDate != null">sampling_date = #{samplingDate},</if>
            <if test="samplingYear != null">sampling_year = #{samplingYear},</if>
            <if test="samplingMonth != null">sampling_month = #{samplingMonth},</if>
            <if test="samplingCount != null">sampling_count = #{samplingCount},</if>
            <if test="qualifiedCount != null">qualified_count = #{qualifiedCount},</if>
            <if test="passRate != null">pass_rate = #{passRate},</if>
            <if test="createdDate != null">created_date = #{createdDate},</if>
        </trim>
        where record_dx_id = #{recordDxId}
    </update>

    <delete id="deleteoutDxDetectRecordsByRecordDxId" parameterType="Long">
        delete from out_dx_detect_records where record_dx_id = #{recordDxId}
    </delete>

    <delete id="deleteoutDxDetectRecordsByRecordDxIds" parameterType="String">
        delete from out_dx_detect_records where record_dx_id in 
        <foreach item="recordDxId" collection="array" open="(" separator="," close=")">
            #{recordDxId}
        </foreach>
    </delete>





    <insert id="insertOutDxDetectRecords" parameterType="out2DxDetectRecords" useGeneratedKeys="true" keyProperty="recordDxId">
        insert into out_dx_detect_records
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="detectLocation != null">detect_location,</if>
            <if test="samplingYear != null">sampling_year,</if>
            <if test="samplingMonth != null">sampling_month,</if>
            <if test="samplingCount != null">sampling_count,</if>
            <if test="qualifiedCount != null">qualified_count,</if>
            <if test="passRate != null">pass_rate,</if>
            <if test="createdDate != null">created_date,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="detectLocation != null">#{detectLocation},</if>
<!--            <if test="samplingDate != null">#{samplingDate},</if>-->
            <if test="samplingYear != null">#{samplingYear},</if>
            <if test="samplingMonth != null">#{samplingMonth},</if>
            <if test="samplingCount != null">#{samplingCount},</if>
            <if test="qualifiedCount != null">#{qualifiedCount},</if>
            <if test="passRate != null">#{passRate},</if>
            <if test="createdDate != null">#{createdDate},</if>
        </trim>
    </insert>




<!--    <select id="getQuarterlyStatistics" resultType="map">-->
<!--        SELECT-->
<!--            detect_location AS 检测单位,-->
<!--            SUM(CASE WHEN sampling_month = #{month1} THEN sampling_count ELSE 0 END) AS '第一个月抽样数',-->
<!--            SUM(CASE WHEN sampling_month = #{month1} THEN qualified_count ELSE 0 END) AS '第一个月合格数',-->
<!--            ROUND(SUM(CASE WHEN sampling_month = #{month1} THEN qualified_count ELSE 0 END) / SUM(CASE WHEN sampling_month = 7 THEN sampling_count ELSE 0 END) * 100, 2) AS '第一个月合格率',-->
<!--            SUM(CASE WHEN sampling_month = #{month2} THEN sampling_count ELSE 0 END) AS '第二个月抽样数',-->
<!--            SUM(CASE WHEN sampling_month = #{month2} THEN qualified_count ELSE 0 END) AS '第二个月合格数',-->
<!--            ROUND(SUM(CASE WHEN sampling_month = #{month2} THEN qualified_count ELSE 0 END) / SUM(CASE WHEN sampling_month = 8 THEN sampling_count ELSE 0 END) * 100, 2) AS '第二个月合格率',-->
<!--            SUM(CASE WHEN sampling_month = #{month3} THEN sampling_count ELSE 0 END) AS '第三个月抽样数',-->
<!--            SUM(CASE WHEN sampling_month = #{month3} THEN qualified_count ELSE 0 END) AS '第三个月合格数',-->
<!--            ROUND(SUM(CASE WHEN sampling_month = #{month3} THEN qualified_count ELSE 0 END) / SUM(CASE WHEN sampling_month = 9 THEN sampling_count ELSE 0 END) * 100, 2) AS '第三个月合格率',-->
<!--            SUM(sampling_count) AS '季度抽样数',-->
<!--            SUM(qualified_count) AS '季度合格数',-->
<!--            ROUND(SUM(qualified_count) / SUM(sampling_count) * 100, 2) AS '季度合格率'-->
<!--        FROM-->
<!--            out_dx_detect_records-->
<!--        WHERE-->
<!--            sampling_year = #{year}-->
<!--          AND sampling_month IN (#{month1}, #{month2}, #{month3})-->
<!--        GROUP BY-->
<!--            detect_location-->
<!--        ORDER BY-->
<!--            detect_location;-->
<!--    </select>-->



<!--    <select id="getQuarterlyStatistics" resultType="out2DxDetectRecords">-->

<!--        SET @index := 0;-->

<!--        SELECT-->
<!--            (@index := @index + 1) AS `recordDxId`,-->
<!--            detect_location AS detectLocation,-->
<!--            SUM(CASE WHEN sampling_month = #{month1} THEN sampling_count ELSE 0 END) AS 'month1SamplingCount',-->
<!--            SUM(CASE WHEN sampling_month = #{month1} THEN qualified_count ELSE 0 END) AS 'month1QualifiedCount',-->
<!--            ROUND(SUM(CASE WHEN sampling_month = #{month1} THEN qualified_count ELSE 0 END) / SUM(CASE WHEN sampling_month = 7 THEN sampling_count ELSE 0 END) * 100, 2) AS 'month1PassRate',-->
<!--            SUM(CASE WHEN sampling_month = #{month2} THEN sampling_count ELSE 0 END) AS 'month2SamplingCount',-->
<!--            SUM(CASE WHEN sampling_month = #{month2} THEN qualified_count ELSE 0 END) AS 'month2QualifiedCount',-->
<!--            ROUND(SUM(CASE WHEN sampling_month = #{month2} THEN qualified_count ELSE 0 END) / SUM(CASE WHEN sampling_month = 8 THEN sampling_count ELSE 0 END) * 100, 2) AS 'month2PassRate',-->
<!--            SUM(CASE WHEN sampling_month = #{month3} THEN sampling_count ELSE 0 END) AS 'month3SamplingCount',-->
<!--            SUM(CASE WHEN sampling_month = #{month3} THEN qualified_count ELSE 0 END) AS 'month3QualifiedCount',-->
<!--            ROUND(SUM(CASE WHEN sampling_month = #{month3} THEN qualified_count ELSE 0 END) / SUM(CASE WHEN sampling_month = 9 THEN sampling_count ELSE 0 END) * 100, 2) AS 'month3PassRate',-->
<!--            SUM(sampling_count) AS 'allSamplingCount',-->
<!--            SUM(qualified_count) AS 'allQualifiedCount',-->
<!--            ROUND(SUM(qualified_count) / SUM(sampling_count) * 100, 2) AS 'allPassRate'-->
<!--        FROM-->
<!--            out_dx_detect_records-->
<!--        WHERE-->
<!--            sampling_year = #{year}-->
<!--          AND sampling_month IN (#{month1}, #{month2}, #{month3})-->
<!--        GROUP BY-->
<!--            detect_location-->
<!--        ORDER BY-->
<!--            detect_location;-->
<!--    </select>-->


    <select id="getQuarterlyStatistics" resultType="out2DxDetectRecords">
        SELECT
            (@index := @index + 1) AS `recordDxId`,
            detectLocation,
            month1SamplingCount,
            month1QualifiedCount,
            month1PassRate,
            month2SamplingCount,
            month2QualifiedCount,
            month2PassRate,
            month3SamplingCount,
            month3QualifiedCount,
            month3PassRate,
            allSamplingCount,
            allQualifiedCount,
            allPassRate
        FROM
            (SELECT
                 detect_location AS detectLocation,
                 SUM(CASE WHEN sampling_month = #{month1} THEN sampling_count ELSE 0 END) AS month1SamplingCount,
                 SUM(CASE WHEN sampling_month = #{month1} THEN qualified_count ELSE 0 END) AS month1QualifiedCount,
                 ROUND(SUM(CASE WHEN sampling_month = #{month1} THEN qualified_count ELSE 0 END) / SUM(CASE WHEN sampling_month = 7 THEN sampling_count ELSE 0 END) * 100, 2) AS month1PassRate,
                 SUM(CASE WHEN sampling_month = #{month2} THEN sampling_count ELSE 0 END) AS month2SamplingCount,
                 SUM(CASE WHEN sampling_month = #{month2} THEN qualified_count ELSE 0 END) AS month2QualifiedCount,
                 ROUND(SUM(CASE WHEN sampling_month = #{month2} THEN qualified_count ELSE 0 END) / SUM(CASE WHEN sampling_month = 8 THEN sampling_count ELSE 0 END) * 100, 2) AS month2PassRate,
                 SUM(CASE WHEN sampling_month = #{month3} THEN sampling_count ELSE 0 END) AS month3SamplingCount,
                 SUM(CASE WHEN sampling_month = #{month3} THEN qualified_count ELSE 0 END) AS month3QualifiedCount,
                 ROUND(SUM(CASE WHEN sampling_month = #{month3} THEN qualified_count ELSE 0 END) / SUM(CASE WHEN sampling_month = 9 THEN sampling_count ELSE 0 END) * 100, 2) AS month3PassRate,
                 SUM(sampling_count) AS allSamplingCount,
                 SUM(qualified_count) AS allQualifiedCount,
                 ROUND(SUM(qualified_count) / SUM(sampling_count) * 100, 2) AS allPassRate
             FROM
                 out_dx_detect_records
             WHERE
                 sampling_year = #{year}
               AND sampling_month IN (#{month1}, #{month2}, #{month3})
             GROUP BY
                 detect_location
             ORDER BY
                 detect_location) AS subquery,
            (SELECT @index := 0) AS idx;
    </select>

</mapper>